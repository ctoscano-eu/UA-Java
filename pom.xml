<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.opcfoundation.ua</groupId>
  <artifactId>opc-ua-stack</artifactId>
  <version>1.03.342.1-SNAPSHOT</version>
  <name>OPC Foundation Unified Architecture Java Stack</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <javadoc.arg>-Xdoclint:none</javadoc.arg>
  </properties>

  <build>
    <plugins>

      <!-- enforces certain Maven versions -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.0.0-M1</version>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>3.0.5</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Used to compile the sources of the project -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.7.0</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>

      <!-- Used to build signatures of APIs and to check your classes against 
        previously generated signatures -->
      <!-- This ensures only java 6 api is used. We check against the sun/oracle 
        implementation because there is optional support for sun security if it is 
        present and bouncy/spongycastle is not in classpath -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>animal-sniffer-maven-plugin</artifactId>
        <version>1.16</version>
        <configuration>
          <signature>
            <groupId>org.codehaus.mojo.signature</groupId>
            <artifactId>java16-sun</artifactId>
            <version>1.10</version>
          </signature>
        </configuration>
        <executions>
          <execution>
            <id>api-check</id>
            <phase>package</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- provides the capability to build jars -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.0.2</version>
        <configuration>
          <archive>
            <addMavenDescriptor>false</addMavenDescriptor>
          </archive>
        </configuration>
      </plugin>

      <!-- Creates a jar archive of the source files of the current project -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.0.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Uses the Javadoc tool to generate javadocs for the specified project -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.10.3</version>
        <configuration>
          <!-- enable these to show more warnings/errors, wont work on JDK6 
            so commented out by default <additionalJOptions> <additionalJOption>-Xmaxerrs</additionalJOption> 
            <additionalJOption>1000</additionalJOption> <additionalJOption>-Xmaxwarns</additionalJOption> 
            <additionalJOption>1000</additionalJOption> </additionalJOptions> -->
          <!-- these are for javadoc:fix goal -->
          <fixTags>param,return,throws</fixTags>
          <additionalparam>${javadoc.arg}</additionalparam>
        </configuration>
        <executions>
          <execution>
            <id>attach-javadoc</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Provides the JaCoCo runtime agent to your tests and allows basic 
        report creation -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.0</version>
        <executions>
          <execution>
            <id>prepare-unit-tests</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <excludes>
                <exclude>org.opcfoundation.ua.core.Identifiers</exclude>
              </excludes>
            </configuration>
          </execution>
          <execution>
            <id>prepare-integration-tests</id>
            <goals>
              <goal>prepare-agent-integration</goal>
            </goals>
            <configuration>
              <excludes>
                <exclude>org.opcfoundation.ua.core.Identifiers</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
        <version>3.4.0.905</version>
      </plugin>

      <!-- Used during the test phase of the build lifecycle to execute the 
        unit tests of an application, generates reports in two different file formats: 
        txt and xml -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.20.1</version>
      </plugin>

      <!-- Allow users to aggregate the project output along with its dependencies, 
        modules, site documentation, and other files into a single distributable 
        archive -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.1.0</version>
        <inherited>false</inherited>
        <configuration>
          <descriptors>
            <descriptor>src/assembly/project.xml</descriptor>
            <descriptor>src/assembly/dependencies.xml</descriptor>
          </descriptors>
          <!-- set this to true if you wish to deploy archives -->
          <attach>false</attach>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Used when you want to manage the versions of artifacts in a project's 
        POM -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>2.5</version>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.10</version>
      </plugin>

    </plugins>

    <pluginManagement>
      <plugins>
        <!--This plugin's configuration is used to store Eclipse m2e settings 
          only. It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      org.apache.maven.plugins
                    </groupId>
                    <artifactId>
                      maven-toolchains-plugin
                    </artifactId>
                    <versionRange>[1.1,)</versionRange>
                    <goals>
                      <goal>toolchain</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  <dependencies>
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcpkix-jdk15on</artifactId>
      <version>1.59</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.madgag.spongycastle</groupId>
      <artifactId>pkix</artifactId>
      <version>1.54.0.0</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.5.4</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore-nio</artifactId>
      <version>4.4.9</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.8.0-beta0</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>2.13.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>1.8.0-beta0</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <profiles>
    <profile>
      <id>jdk6</id>
      <properties>
        <javadoc.arg></javadoc.arg>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <systemPropertyVariables>
                <useJdk6Toolchain>true</useJdk6Toolchain>
              </systemPropertyVariables>
            </configuration>
          </plugin>

          <!-- This plugin ensures we are actually building on JDK 6 -->
          <!-- You need to create toolchains.xml in your .m2 folder -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-toolchains-plugin</artifactId>
            <version>1.1</version>
            <executions>
              <execution>
                <id>check-toolchain</id>
                <phase>validate</phase>
                <goals>
                  <goal>toolchain</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <toolchains>
                <jdk>
                  <version>1.6</version>
                  <vendor>sun</vendor>
                </jdk>
              </toolchains>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>